The database consists of three tables movie , actor and casting.
The movie table has the primary key (PK) of id, title, and yr and foreign key (FK)  of director, budget, gross.
The actor table has PK of id and FK of name.
The casting table consist of movieid, actorid, and ord, which all serve as both PK and FK. 

Question 1.
List the films where the yr is 1962 [Show id, title]
SQL Code: 
SELECT id, title
 FROM movie
 WHERE yr=1962;

Question 2. When was Citizen Kane released?
SQL Code: 
SELECT yr
FROM movie
WHERE title = 'Citizen Kane';

Question 3. List all of the Star Trek movies, include the id, title and yr (all of these movies 
include the words Star Trek in the title). Order results by year.
SQL Code:
SELECT id, title, yr
FROM movie
WHERE title LIKE 'Star Trek%';

Question 4. What id number does the actor 'Glenn Close' have?
SQL Code:
SELECT id
FROM actor
WHERE name = 'Glenn Close';

Question 5. What is the id of the film 'Casablanca'
SQL Code: 
SELECT id 
FROM movie
WHERE title = 'Casablanca';

Question 6. Obtain the cast list for 'Casablanca'.
SQL Code: 
SELECT name
FROM actor
JOIN casting ON (id=actorid)
WHERE movieid=27;

Question 7. Obtain the cast list for the film 'Alien'
SQL Code: 
SELECT a.name 
FROM actor a
JOIN casting c ON a.id = c.actorid
JOIN movie m ON c.movieid = m.id
WHERE m.title = 'Alien';

Question 8. List the films in which 'Harrison Ford' has appeared
SQL Code: 
SELECT m.title
FROM movie m
JOIN casting c ON m.id = c.movieid
JOIN actor a ON c.actorid = a.id
where a.name = 'Harrison Ford';

Question 9. List the films where 'Harrison Ford' has appeared - but not in the starring role. 
[Note: the ord field of casting gives the position of the actor. If ord=1 then this actor is in the starring role]
SQL Code: 
SELECT m.title
FROM movie m
JOIN casting c ON m.id = c.movieid
JOIN actor a ON c.actorid = a.id
WHERE a.name = 'Harrison Ford'
AND c.ord!= 1;

Question 10. List the films together with the leading star for all 1962 films.
SQL Code: 
SELECT m.title, a.name
FROM movie m
JOIN casting c ON m.id = c.movieid
JOIN actor a ON c.actorid = a.id
WHERE m.yr = 1962
AND c.ord = 1;

Question 11. Which were the busiest years for 'Rock Hudson', 
show the year and the number of movies he made each year for any year in which he made more than 2 movies.
SQL Code:
SELECT yr, COUNT(title) AS num_movies
FROM movie m
JOIN casting c ON m.id = c.movieid
JOIN actor a ON c.actorid = a.id
WHERE name = 'Rock Hudson'
GROUP BY yr
HAVING COUNT(title) > 2;

Question 12. List the film title and the leading actor for all of the films 'Julie Andrews' played in.
SQL Code: 
SELECT DISTINCT m.title, a.name
FROM movie m
JOIN casting c ON m.id = c.movieid
JOIN actor a ON c.actorid = a.id
WHERE m.id IN (
  SELECT movieid
  FROM casting
  WHERE actorid IN (
    SELECT id FROM actor WHERE name = 'Julie Andrews'
  )
) AND c.ord = 1;

Question 13. Obtain a list, in alphabetical order, of actors who've had at least 15 starring roles.
SELECT a.name
FROM actor a 
JOIN casting c ON a.id = c.actorid
GROUP BY a.name
HAVING SUM(CASE WHEN c.ord=1 THEN 1 ELSE 0 END) >=15
ORDER BY a.name;

Question 14. List the films released in the year 1978 ordered by the number of actors in the cast, then by title.
SELECT m.title, count(a.name) as num_of_actors
FROM movie m
JOIN casting c ON m.id = c.movieid
JOIN actor a ON c.actorid = a.id
WHERE m.yr = 1978
GROUP BY m.title
ORDER BY count(a.name) DESC, m.title;

Question 15. List all the people who have worked with 'Art Garfunkel'.
SELECT a.name
FROM actor a
JOIN casting c ON a.id = c.actorid
WHERE a.name != 'Art Garfunkel' 
  AND EXISTS (
    SELECT 1
    FROM casting c2
    JOIN actor a2 ON c2.actorid = a2.id
    WHERE a2.name = 'Art Garfunkel'
      AND c2.movieid = c.movieid
  );


